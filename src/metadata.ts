/* eslint-disable */
export default async () => {
    const t = {
        ["./libs/enums/index"]: await import("./libs/enums/index")
    };
    return { "@nestjs/swagger": { "models": [[import("./services/interview/interview.dto"), { "CreateInterviewDto": { title: { required: true, type: () => String, maxLength: 255 }, description: { required: true, type: () => String }, status: { required: false, enum: t["./libs/enums/index"].InterviewStatus } }, "UpdateInterviewDto": { title: { required: false, type: () => String, maxLength: 255 }, description: { required: false, type: () => String }, status: { required: false, enum: t["./libs/enums/index"].InterviewStatus } }, "GetInterviewQuery": { search: { required: false, type: () => String, maxLength: 255 }, status: { required: false, enum: t["./libs/enums/index"].InterviewStatus }, sortBy: { required: false, type: () => String }, sort: { required: false, type: () => String }, next: { required: false, type: () => Number }, size: { required: false, type: () => Number } }, "GetIdParam": { id: { required: true, type: () => String } } }], [import("./services/account/account.dto"), { "CreateAccountsDto": { username: { required: true, type: () => String, maxLength: 20 }, password: { required: true, type: () => String }, displayName: { required: true, type: () => String, maxLength: 20 } }, "LoginDto": { username: { required: true, type: () => String, maxLength: 20 }, password: { required: true, type: () => String } } }], [import("./services/comment/comment.dto"), { "CreateCommentDto": { refBy: { required: true, type: () => String }, content: { required: true, type: () => String, maxLength: 255 }, status: { required: false, enum: t["./libs/enums/index"].CommentStatus } }, "UpdateCommentDto": { content: { required: false, type: () => String, maxLength: 255 }, status: { required: false, enum: t["./libs/enums/index"].CommentStatus } }, "GetCommentQuery": { refBy: { required: true, type: () => String }, sortBy: { required: false, type: () => String }, sort: { required: false, type: () => String }, next: { required: false, type: () => Number }, size: { required: false, type: () => Number } }, "GetIdParam": { id: { required: true, type: () => String } } }], [import("./services/log/log.dto"), { "GetChangelogQuery": { refBy: { required: true, type: () => String }, sortBy: { required: false, type: () => String }, sort: { required: false, type: () => String }, next: { required: false, type: () => Number }, size: { required: false, type: () => Number } } }]], "controllers": [[import("./app.controller"), { "AppController": { "healthCheck": { type: Boolean } } }], [import("./services/interview/interview.controller"), { "InterviewController": { "interviews": { type: Object }, "interview": { type: Object }, "createInterview": {}, "updateInterview": {}, "archive": {} } }], [import("./services/account/account.controller"), { "AccountController": { "createAccount": {}, "login": {} } }], [import("./services/comment/comment.controller"), { "CommentController": { "comments": {}, "createComment": {}, "updateComment": {}, "deleteComment": {} } }], [import("./services/log/log.controller"), { "ChangelogController": { "logs": { type: Object } } }]] } };
};